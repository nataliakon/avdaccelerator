trigger:
  - none

pr:
  - none

variables:
  - group: AzMinLab-CanadaPubSecALZ-AADJ
  - name: deploymentRegion
    value: canadacentral
  - name: serviceConnection
    value: AzMinLab-CanadaPubSecALZ
  - name: vmWinImage
    value: windows-latest
  - name: vmImage
    value: ubuntu-latest
  - name: deployOperation
    value: create
  - name: var-bashPostInjectScript
    value: ':'
  - name: var-bashPreInjectScript
    value: 'set -E; function catch { echo "##vso[task.logissue type=error]Caller: $(caller), LineNo: $LINENO, Command: $BASH_COMMAND" ; exit 1 ; } ; echo ; echo "Current working directory: $(pwd)" ; echo ; trap catch ERR'
 
stages:
  - stage: Deploy_AVD_Accelerator
    displayName: Deploy AVD Accelerator
    jobs:
      # Deploy template deploy-baseline.bicep for AVD Accelerator
      - template: deploy-template-sub.yml
        parameters:
          jobName: Deploy_AVD_Accelerator
          location: $(deploymentRegion)
          workingDir: $(System.DefaultWorkingDirectory)/workload/bicep
          templateFile: deploy-baseline.bicep
          parameterArray:
            - deploymentPrefix $(deploymentPrefix)
            - avdDeploySessionHostsCount $(avdDeploySessionHostsCount)
            - avdWorkloadSubsId $(avdWrklSubsId)
            - avdEnterpriseAppObjectId $(avdEnterpriseAppObjectId)
            - avdManagementPlaneLocation $(deploymentRegion)
            - avdSessionHostLocation $(deploymentRegion)
            - fslogixStorageSku $(fslogixStorageSku)
            - createAvdFslogixDeployment $(createAvdFslogixDeployment)
        #    - avdWrklSecretAccess $(avdWrklSecretAccess)
            - existingVnetSubnetResourceId $(existingVnetSubnetResourceId)
            - existingHubVnetResourceId $(existingHubVnetResourceId)
            - useSharedImage $(useSharedImage)
            - avdOsImage $(avdOsImage)
            - createAvdVnet $(createAvdVnet)
            - avdIdentityDomainName $(avdIdentityDomainName)
            - avdDomainJoinUserName $(avdDomainJoinUserName)
            - avdDomainJoinUserPassword $(avdDomainJoinUserPassword)
            - avdVmLocalUserName $(avdVmLocalUserName)
            - avdVmLocalUserPassword $(avdVmLocalUserPassword)
            - avdDeployRappGroup $(avdDeployRappGroup)
            - avdDeploySessionHosts $(avdDeploySessionHosts)
            - avdStartVmOnConnect $(avdStartVmOnConnect)
            - createStartVmOnConnectCustomRole $(createStartVmOnConnectCustomRole)
            - vNetworkGatewayOnHub $(vNetworkGatewayOnHub)
            - createOuForStorage $(createOuForStorage)
            - storageOuPath $(storageOuPath)
